// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  username          String?
  fullName          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  wishlists     Wishlist[]  // A user can have multiple wishlists
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  socials       SocialLink[]
}

model Wishlist {
  id          Int        @id @default(autoincrement())
  title       String?
  description String?
  privacy     Privacy     @default(PRIVATE)
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  wishes      Wish[]      // A wishlist can have multiple wishes
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Wish {
  id          Int        @id @default(autoincrement())
  productName String
  description String?
  retailer    String
  wishlistId  Int
  amazonLink  String?
  image       String?
  wishlist    Wishlist    @relation(fields: [wishlistId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model SocialLink {
  platform  SocialNetwork  // ENUM for platform
  url       String         // URL of the social link
  userId    String         // Foreign key referencing User
  user      User           @relation(fields: [userId], references: [id]) // Relationship to User

  @@id([platform, userId]) // Composite primary key
}
// Enum for privacy settings
enum Privacy {
  PUBLIC
  PRIVATE
}

enum SocialNetwork {
  tiktok  
  facebook
  linkedin
  instagram
}
